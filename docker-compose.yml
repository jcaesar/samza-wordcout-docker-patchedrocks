version: '3.5'

services:
  zookeeper1:
    image: zookeeper:3.4
    hostname: zookeeper1
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888

  kafka1: &kafka
    image: wurstmeister/kafka:2.11-0.11.0.3
    ports:
      - "${DC_KAFKA1_PORT1-9092:}9092"
    environment: &kafka-env
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181
      KAFKA_ADVERTISED_LISTENERS: INTERBROKER://:9090,INSIDE://:9091,OBSERVED://${DC_KAFKA_OBSERVED_HOST-127.0.0.1}:9092
      KAFKA_LISTENERS: INTERBROKER://:9090,INSIDE://:9091,OBSERVED://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERBROKER:PLAINTEXT,INSIDE:PLAINTEXT,OBSERVED:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERBROKER
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms256M"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka"
      KAFKA_MESSAGE_MAX_BYTES: 30000000
    entrypoint: |
      bash -c "
        echo >>/opt/kafka/config/log4j.properties log4j.logger.kafka.coordinator.group.GroupCoordinator=WARN
        echo >>/opt/kafka/config/log4j.properties log4j.logger.kafka.server.KafkaConfig=WARN
        exec start-kafka.sh
      "
    depends_on:
      - zookeeper1

  kafka2:
    <<: *kafka
    ports:
      - "${DC_KAFKA_PORT2-9093:}9093"
    environment:
      <<: *kafka-env
      KAFKA_ADVERTISED_LISTENERS: INTERBROKER://:9090,INSIDE://:9091,OBSERVED://${DC_KAFKA_OBSERVED_HOST-127.0.0.1}:9093
      KAFKA_LISTENERS: INTERBROKER://:9090,INSIDE://:9091,OBSERVED://:9093

  wordcount:
    build:
      context: ./wordcount
    depends_on: [ kafka1, kafka2 ]

  datagen:
    build:
      context: ./datagen
    depends_on: [ kafka1, kafka2 ]
